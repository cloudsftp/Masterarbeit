# Generated by AnT 4.669, Release 4c (v 4.3.1), (c) 1999-2011,
# at Thu Dec  2 18:33:10 2021


dynamical_system = {
  type = map,
  name = "pw. lin. map",
  parameter_space_dimension = 10,
  parameters = {
    parameter[0] = {
      value = 1.5,
      name = "aL"
    },
    parameter[1] = {
      value = -1.2,
      name = "aR"
    },
    parameter[2] = {
      value = 1.75,
      name = "aM1"
    },
    parameter[3] = {
      value = 1.25,
      name = "aM2"
    },
    parameter[4] = {
      value = -1.1,
      name = "aM3"
    },
    parameter[5] = {
      value = 1.47,
      name = "mL"
    },
    parameter[6] = {
      value = -0.1,
      name = "mR"
    },
    parameter[7] = {
      value = -0.25,
      name = "mM1"
    },
    parameter[8] = {
      value = 0.25,
      name = "mM2"
    },
    parameter[9] = {
      value = 3.2,
      name = "mM3"
    }
  },
  state_space_dimension = 1,
  initial_state = (-0.1),
  reset_initial_states_from_orbit = false,
  number_of_iterations = 100000,
  s[0] = {
    name = "",
    equation_of_motion = "0"
  }
},
scan = {
  type = nested_items,
  mode = 0,
  item[0] = {
    type = real_linear,
    points = 1200,
    min = 1.3,
    max = 1.8,
    object = "mL"
  }
},
investigation_methods = {
  general_trajectory_evaluations = {
    is_active = true,
    transient = 100,
    saving = {
      is_active = true,
      type = time_oriented,
      points_step = 1,
      trajectory = false,
      trajectory_file = "orbit.tna",
      cobweb = true,
      cobweb_file = "cobweb.tna",
      velocity = false,
      current_velocity_file = "orbital_velocity.tna",
      phase_portrait = false,
      phase_portrait_file = "phase_portrait.tna",
      initial_states = false,
      initial_states_file = "initial_states.tna",
      save_only_specific_area = false,
      state_space_saving_area = (),
      velocity_space_saving_area = ()
    }
  },
  period_analysis = {
    is_active = false,
    max_period = 2,
    compare_precision = 1e-09,
    period = false,
    period_file = "period.tna",
    cyclic_asymptotic_set = false,
    cyclic_bif_dia_file = "bif_cyclic.tna",
    acyclic_last_states = true,
    acyclic_bif_dia_file = "bif_acyclic.tna",
    cyclic_graphical_iteration = false,
    cyclic_graph_iter_file = "cyclic_cobweb.tna",
    acyclic_graphical_iteration = false,
    acyclic_graph_iter_file = "acyclic_cobweb.tna",
    using_last_points = 1280,
    period_selections = false,
    periods_to_select = (),
    period_selection_file = "period_selection",
    period_selection_file_extension = "tna"
  },
  band_counter = {
    is_active = false,
    method = box_counting_based,
    transient = 1000,
    max_bandcount = 64,
    period_compare_precision = 1e-08,
    automatic_domain_detection = true,
    domain_boundaries = ((0.0,1.0),(0.0,1.0)),
    number_of_boxes = (1000),
    error_threshold = 0,
    use_hash = false,
    hash_size = 0,
    period = false,
    period_file = "bandcount_period.tna",
    bandcount_file = "bandcount.tna"
  },
  dimensions_analysis = {
    is_active = false,
    transient = 1000,
    median_calculation = plateau_algorithm,
    min_layer = 4,
    max_layer = 12,
    partition_factor = 2,
    automatic_range_detection = false,
    ranges = ((-2.7,2.2)),
    save_outside_points = false,
    outside_points_file = "outside_points.tna",
    capacity_dimension = false,
    cap_dimension_file = "capacity_dimension.tna",
    information_dimension = false,
    info_dimension_file = "information_dimension.tna",
    correlation_dimension = false,
    corr_dimension_file = "correlation_dimension.tna",
    q_dimension = false,
    q_start = 3,
    q_end = 3,
    q_dimension_file_suffix = "q_dimension.tna",
    invariant_measure = true,
    inv_measure_file = "invariant_measure.tna",
    measure_deviation = false,
    measure_deviation_file = "measure_deviation.tna",
    metric_entropy = false,
    entropy_file = "metric_entropy.tna",
    save_all_layers = false
  },
  symbolic_analysis = {
  },
  rim_analysis = {
  },
  symbolic_image_analysis = {
  },
  lyapunov_exponents_analysis = {
  },
  frequency_analysis = {
  },
  singular_value_analysis = {
  },
  check_for_conditions = {
  }
}

